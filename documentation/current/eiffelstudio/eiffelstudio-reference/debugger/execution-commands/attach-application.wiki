[[Property:title|Attach application]]
[[Property:link_title|]]
[[Property:weight|0]]
[[Property:uuid|d5b8d2b3-9489-a631-81ee-f25d6c309215]]
Usually when you want to debug an application, you launch it from EiffelStudio and the debugger is automatically attached to the execution of the application.
However for specific needs (such as server development), you might want to start the execution outside EiffelStudio, and then attach the EiffelStudio's debugger to it.

Since 6.8, there is an experimental solution based on socket connection.
You start your application, and this one will wait for the debugger to connect.

There are some obvious requirements such as
* The application should be a workbench application 
* EiffelStudio should be open on the project which was used to compile the workbench.

So how to achieve that?
* On the application side, you will need to provide at some time a port number, and when the application will wait for the debugger.

On the application side, you can do that either
* by setting '''ISE_DBG_PORTNUM''' environment variable to a specific port number (by default 1050)
* by calling <eiffel>{RT_DEBUGGER}.rt_workbench_wait_for_debugger (a_port_number: INTEGER)</eiffel> from the program itself

Then from EiffelStudio, menu "Execution>Attach Debuggee" and provide the same port number.
(note that you can add the associated command to the execution tool bar).

At this point EiffelStudio is able to debug the application as if it was launched by Eiffel Studio itself.

{{note| This solution is still experimental, it can (and will) be improved in the future}}


