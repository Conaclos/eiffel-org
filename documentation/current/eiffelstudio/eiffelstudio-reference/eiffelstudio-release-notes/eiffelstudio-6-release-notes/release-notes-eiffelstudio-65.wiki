[[Property:title|Release notes for EiffelStudio 6.5]]
[[Property:link_title|6.5]]
[[Property:weight|-12]]
[[Property:uuid|3cf9bff5-1a0d-fa6b-9577-bc44319ac609]]
==Graphical environment==

===What's new===

===Improvements===

===Changes===

===Bug fixes===

==Compiler==
* Click [[Major changes between ISE Eiffel 6.4 and ISE Eiffel 6.5|here]]  for the compiler release notes.

== AutoTest==
* <strong>Library: <eiffel>EQA_TES_SET.on_prepare</eiffel> is now called during <eiffel>default_create</eiffel>, making it simpler to write void-safe tests.</strong>
* Library: Added the possibility to wrap the actual test routine call.
* AutoTest traverses all writeable clusters in the project for possible test classes, making &lt;tests&gt;-clusters obsolete. The traversal happens in the background allowing the user to continue to work on the project.
* Tags can be used to control the test execution flow. Tagging a test with "execution/isolated" makes the test execute in a separate evaluator process, meaning the evaluator is restarted before and after executing the corresponding test (useful for tests relying on the initial access to a once routine or tests which possibly leave the memory corrupted).<br />Also any tag of the form "execution/serial[/*]" groups the tests to ensure that they are not executed in parallel (useful when a group of tests share a resource which has to be accessed sequentially).
* Any results are stored between EiffelStudio sessions.
* Improved the management of existing tests by merging the "View" and "Filter" box into one input field.
* Improved bottom part of AutoTest tool by only having two tabs displaying test execution and test creation results.

==Debugger==
* Click [[Release notes for EiffelStudio 6.5 related to the debugger|here]]  for the EiffelStudio debugger release notes.

==EiffelBuild==
* Click [[EiffelBuild Version History|here]]  for the EiffelBuild release notes.

==Libraries==

===EiffelBase===
* In experimental mode, we have changed the signature of <eiffel>generating_type</eiffel> to return an instance of <eiffel>TYPE</eiffel> rather than an instance of <eiffel>STRING</eiffel>. Existing code should still compile out of the box since we have equipped <eiffel>TYPE</eiffel> with conversions and new features similar to those of <eiffel>STRING</eiffel>. In the few cases where it would still not compile, use `generating_type.out' to ensure that the code will compile fine regardless of the compiler mode chosen (i.e. experimental or non-experimental).
* Fixed an issue in <eiffel>copy</eiffel> from <eiffel>HEAP_PRIORITY_QUEUE</eiffel> which would not do anything because it was simply copying itself, not the other queue.
* Fixed a bug in <eiffel>remove</eiffel> from <eiffel>HEAP_PRIORITY_QUEUE</eiffel> which caused the internal structure to be referenced beyond its bounds. 
* Made <eiffel>clear_all</eiffel> in <eiffel>STRING_8</eiffel>, <eiffel>STRING_32</eiffel> and <eiffel>HASH_TABLE</eiffel> obsolete. One has to use <eiffel>wipe_out</eiffel>instead.
* Strengthen precondition of <eiffel>resize</eiffel> in <eiffel>STRING_8</eiffel>/<eiffel>STRING_32</eiffel> to forbid values that would shrink the string content. Use <eiffel>grow</eiffel> instead to preserve the former <eiffel>resize</eiffel> behavior. 
* Added the base extension library that offers some extra functionality to EiffelBase: <eiffel>SEARCH_TABLE</eiffel> which is a HASH_TABLE where keys and items are the same (basically becoming a set), and sorting facilities for <eiffel>INDEXABLE</eiffel> containers.
* Added the "+" operator in <eiffel>READABLE_STRING_GENERAL</eiffel>. 
* Added ability to create a directory recursively. 
* Fixed bug#4118 where on .NET <eiffel>{EXECUTION_ENVIRONMENT}.put</eiffel> had no effect on the actual process environment variables because the API was only available in .NET 2.0 which is what we now support at the minimum. 
* Fixed a bug in <eiffel>{MEMORY}.memory_map</eiffel> which would cause a precondition violation in one of its call. 
* Fixed issue with <eiffel>{BINARY_SEARCH_TREE_SET}.remove</eiffel> which would not move the cursor and thus causing an infinite loop in <eiffel>subtract</eiffel> and <eiffel>intersect</eiffel>.
* Fixed issue with <eiffel>{PART_SORTED_SET}.put</eiffel> and <eiffel>{PART_SORTED_SET}.extend</eiffel> which had no effect and thus causing a postcondition violation.
* Fixed invalid retrieval of SPECIAL objects using the Eiffel SED serializer in experimental mode. 
* Fixed a missing element in <eiffel>{BOUNDED_QUEUE}.linear_representation</eiffel>.

===EiffelNet===

===EiffelProcess===

===EiffelVision2===
* [[Revisions and Bug Fixes|Click here for EiffelVision2 release notes.]] 

[[EiffelStudio release notes|Click here to check out what was new in other versions]]  

