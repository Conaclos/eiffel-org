[[Property:title|CA011 - Too many arguments]]
[[Property:link_title|CA011]]
[[Property:weight|0]]
[[Property:uuid|d25e2dc7-7a95-c13a-bfa2-ceb42a084fa6]]
__NOTOC__
=Description=
A feature that has too many arguments should be avoided since it makes the class interface complicated and it is not easy to use. The feature arguments may include options, which should be considered to be moved to separate features.

Interfaces of features with a large number of arguments are complicated, in the sense for example that they are hard to remember for the programmer. Often many arguments are of the same type (such as INTEGER). So, in a call, the passed arguments are likely to get mixed up, too, without the compiler detecting it.

Arguments where in most of the cases the same value is passed--the default value--are called options. As opposed to operands, which are necessary in each feature call, each option should be moved to a separate feature. The features for options can then be called before the operational feature call in order to set (or unset) certain options. If a feature for an option is not called then the class assumes the default value for this option.

:{| class="doctable"
|-
| '''Scope'''
| Instruction
|-
| '''Status'''
| Enabled
|-
| '''Severity'''
| Warning
|-
| '''Applicability'''
| All
|-
| '''Score'''
|  50
|-
| '''Arguments threashold'''
| 4
|}


=Example of violation=
<e>my_document.print (printer_name, paper_size, color_or_not, postscript_level, print_resolution)
</e>

=Recommendation=
Replace left or right side with something else than the other element.

In the example, one could write:
<e>
my_document.set_printing_size (paper_size)
my_document.set_color
my_document.print
</e>

{{SeeAlso | [[CA071 - Self-comparison]]}}

