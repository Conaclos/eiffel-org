[[Property:title|SCOOP implementation]]
[[Property:weight|2]]
[[Property:uuid|9185a5be-e1ec-67a5-70a3-c8fe1d8d151c]]
{{UnderConstruction}}


The implementation of SCOOP within EiffelStudio varies from the definition as it has been presented in publications during the model's evolution. Many of the differences stem from the reality that SCOOP systems could be optimized for performance, including maximizing concurrency. For example, even though the SCOOP rules state that a separate call to a query is synchronous, i. e., the calling processor waits until the query completes before proceeding, if a static analysis can show that the wait is not necessary to the proper functioning of the remainder of the calling routine, then the call to the query can be done asynchronously. 

The differences between the EiffelStudio implementation of SCOOP and current and previous definitions of the SCOOP model are shown below.






